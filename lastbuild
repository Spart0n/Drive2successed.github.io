<!DOCTYPE html>
<html>
<head>
 
  <!-- Responsive -->
  <meta charset="utf-8">
  <meta name="viewport"
        content="width=device-width,
                 initial-scale=1">
  <meta http-equiv="X-UA-Compatible"
        content="ie=edge">
 
  <!-- Title -->
  <title>Driven2Succseed</title>
 
  <!-- Meta Tags required for
       Progressive Web App -->
  <meta name=
  "apple-mobile-web-app-status-bar"
        content="#aa7700">
  <meta name="theme-color"
        content="black">
 
  <!-- Manifest File link -->
  <link rel="manifest" href="/manifest.json">
  <link rel="icon" type="image/x-icon" href="/Images/logo.png">
</head>

<body>
    <h1 style="color: green;">
           Driven2Succseed           
    </h1>
    <h2>sup!</h2>
<!--
<script>old 
   if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/service-worker.js');
    }
</script>
-->
<script>
      window.addEventListener('load', () => {
        registerSW();
      });
   
      // Register the Service Worker
      async function registerSW() {
        if ('serviceWorker' in navigator) {
          try {
            await navigator
                  .serviceWorker
                  .register('serviceworker.js');
          }
          catch (e) {
            console.log('SW registration failed');
          }
        }
      }
   </script>
</body>
</html>



...
manifest


{
    "name": "Driven2Succseed",
    "short_name":  "Driven",
    "Start_url" : "index.html",
    "prefer_related_applacation" : "true",
    "display":"standalone",
    "background_color":"#5900b3",
    "theme_color":"black",
    "scope": ".",
    "description":"app.",
    "icons":[
    {
    "src":"/icons/manifest-icon-192.maskable.png",                     
    "sizes":"192x192",
    "type":"image/png"
    },
    {
    "src":"/icons/manifest-icon-512.maskable.png",
    "sizes":"512x512",
    "type":"image/png"
    }
  ]
}

..SW 
//importScripts(
//    'https://storage.googleapis.com/workbox-cdn/releases/6.4.1/workbox-sw.js'
//  );

//workbox.routing.registerRoute(
//({Request}) => Request.destination === 'images',
//new workbox.stratagies.NetworkFirst()
//),


var staticCacheName = "pwa";
 
self.addEventListener("install", function (e) {
  e.waitUntil(
    caches.open(staticCacheName).then(function (cache) {
      return cache.addAll(["/"]);
    })
  );
});
 
self.addEventListener("fetch", function (event) {
  console.log(event.request.url);
 
  event.respondWith(
    caches.match(event.request).then(function (response) {
      return response || fetch(event.request);
    })
  );
});